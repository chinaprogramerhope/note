git支持https和git两种传输协议, 大多数 Git 服务器都会选择使用 SSH 公钥来进行授权.

初次运行git设置 - 
	0. ssh-keygen
	1. git config --global user.name "hxl"
	2. git config --global user.email "18301805881@163.com"
	3. git config --global core.editor vim

查看远程仓库地址 - 
	git remote -v

查看远程分支 - 
	git branch -a

把本地项目上传到github
	1. 进入上传文件的目录， 初始化本地仓库: git init
	2. 把本地文件添加刀本地仓库暂存区: git add . 或 git add [filename]
	3. 把本地仓库暂存区的文件提交到本地仓库: git commit -m 'message'
	4. 把本地仓库和远程仓库相关联, 其中origin是远程仓库的别名, 可以自己改变: 
		git remote add origin [url]  如: git remote add origin https://git.oschina.net/miaoxingrener/test.git
	5. 若远程仓库不为空， 要把本地仓库和远程仓库做同步，否则可以省略此步骤， 其中master为远程仓库的分支名
		git pull --rebase origin master
	6. 把本地仓库中的文件同步刀远程仓库中。其中master为远程仓库的分支名:
		git push -u origin master
	7. 最后可以查看状态： git status
	8. clone分支： git clone -b 5.2 https://xxx.git


合并分支到master - 
	https://www.cnblogs.com/mafeng/p/10173919.html
	1. 切换到master - git checkout master
	2. git pull origin master
	3. git merge dev
	4. git status   git push origin master



merge失败回滚:
1、命令
⑴ git reflog
查看merge操作的上一个提交记录的版本号

⑵ git reset –hard 版本号
这样可以回滚到merge之前的状态
2、示例
误将dev合并到了master分支，现要回滚merge操作
⑴ 首先git reflog
ee0ee93 HEAD@{0}: merge dev: Merge made by the ‘recursive’ strategy.
7335548 HEAD@{1}: checkout: moving from dev to master
可以看到需要回滚到 7335548 这个提交记录上



