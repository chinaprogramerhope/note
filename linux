基本操作:
  解压xz：1. xz -d ***.tar.xz  2.tar -xf  ***.tar
  解压gz到指定目录：tar -xf ***.tar.gz -C ./xxx
  lrzsz: sz下载, lz上传
  查看进程: ps -ef | grep mysqld
  lsof: (list open files) 显示系统打开的文件，因为 lsof 需要访问核心内存和各种文件，所以必须以 root 用户的身份运行它才能够充分地发挥其功能
  vmstat: 报告虚拟内存统计信息. vmstat 命令报告关于内核线程、虚拟内存、磁盘、陷阱和 CPU 活动的统计信息。由 vmstat 命令生成的报告可以用于平衡系统负载活动。系统范围内的这些统计信息（所有的处理器中）都计算出以百分比表示的平均值，或者计算其总和
  netstat: 检验本机各端口的网络连接情况
  sar: 该算法是第一个具有Qos意识的路由协议。
  ss: ss是Socket Statistics的缩写。顾名思义，ss命令可以用来获取socket统计信息，它可以显示和netstat类似的内容。但ss的优势在于它能够显示更多更详细的有关TCP和连接状态的信息，而且比netstat更快速更高效。当服务器的socket连接数量变得非常大时，无论是使用netstat命令还是直接cat /proc/net/tcp，执行速度都会很慢。可能你不会有切身的感受，但请相信我，当服务器维持的连接达到上万个的时候，使用netstat等于浪费 生命，而用ss才是节省时间。ss快的秘诀在于，它利用到了TCP协议栈中tcp_diag。tcp_diag是一个用于分析统计的模块，可以获得Linux 内核中第一手的信息，这就确保了ss的快捷高效。当然，如果你的系统中没有tcp_diag，ss也可以正常运行，只是效率会变得稍慢。（但仍然比 netstat要快。）
  trace: strace常用来跟踪进程执行时的系统调用和所接收的信号。 在Linux世界，进程不能直接访问硬件设备，当进程需要访问硬件设备(比如读取磁盘文件，接收网络数据等等)时，必须由用户态模式切换至内核态模式，通 过系统调用访问硬件设备。strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。
  tcpdump: TcpDump可以将网络中传送的数据包完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供and、or、not等逻辑语句来帮助你去掉无用的信息。
  ldd: (list dynamic dependencies) 列出动态库依赖关系
  命令行音乐播放器：sudo apt-get install sox libsox-fmt-all
  定时播放音乐： crontab -e, 加入：00 5 * * * nohup play "/home/kobeincode/音乐/CloudMusic/凯瑟喵 - 撒野.mp3" > /dev/null 2>&1 &
  netease-cloud-music cannot open: 1. sudo apt-get install gnome-themes-standard, 2. reboot
